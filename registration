package com.example.chitchat20;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.app.ProgressDialog;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;
import com.google.firebase.storage.UploadTask;

import de.hdodenhof.circleimageview.CircleImageView;

public class registration extends AppCompatActivity {
    TextView logButton;
    EditText rgUserName , rgPassword , rgReEnterPassword , rgEmail;
    Button rgSignUpButton;
    CircleImageView rg_profileImg;
    FirebaseDatabase database;
    FirebaseStorage storage;

    FirebaseAuth auth;
    Uri imageURI;
    String imageuri;

    String emailPattern = "[a-zA-Z0-9._-]+@[a-z]+\\\\.+[a-z]+" ;

    FirebaseDatabase  Database;

    FirebaseStorage Storage;

    ProgressDialog progressDialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_registration);
        progressDialog=new ProgressDialog(this);
        progressDialog.setMessage("stabilishing the account ");
        progressDialog.setCancelable(false);

    getSupportActionBar().hide();
        logButton = findViewById(R.id.logButton);
        rgUserName = findViewById(R.id.rgUserName);
        rgPassword = findViewById(R.id.rgPassword);
        rgReEnterPassword = findViewById(R.id.rgReEnterPassword );
        rgEmail = findViewById(R.id.rgEmail);
        rg_profileImg = findViewById(R.id.rg_profileImg);
        rgSignUpButton = findViewById(R.id.rgSignUpButton);
        database=FirebaseDatabase.getInstance();
        storage=FirebaseStorage.getInstance();
        auth=FirebaseAuth.getInstance();






        logButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(registration.this,login.class);
                startActivity(intent);
                finish();
            }
        });
        rgSignUpButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String namee = rgUserName.getText().toString();
                String email =   rgEmail.getText().toString();
                String Password =   rgPassword .getText().toString();
                String ReEnterPassword  =   rgReEnterPassword  .getText().toString();
                String status = "hey i am using this application";


                if (TextUtils.isEmpty(namee) || TextUtils.isEmpty(email) ||
                        TextUtils.isEmpty(Password) || TextUtils.isEmpty(ReEnterPassword)){
                    progressDialog.dismiss();
                    Toast.makeText(registration.this, "Please Enter Valid Information", Toast.LENGTH_SHORT).show();    
                } else if (!email.matches(emailPattern)) {
                    progressDialog.dismiss();
                    rgEmail.setError("type a valid Email");
                    
                } else if (Password.length()<6) {
                    progressDialog.dismiss();
                    rgPassword.setError("password must be 6 character or more");
                    
                } else if (!Password.equals(ReEnterPassword)) {
                    progressDialog.dismiss();
                    rgReEnterPassword.setError("password does ot match ");
                    
                }else {
                    auth.createUserWithEmailAndPassword(email,Password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {


                        @Override
                        public void onComplete(@NonNull Task<AuthResult> task) {
                            if(task.isSuccessful()){

                                String id = task.getResult().getUser().getUid();
                                DatabaseReference reference = database. getReference().child("user").child("id");
                                StorageReference storageReference = storage.getReference().child("Upload").child(id);


                                if (imageURI!=null){
                                    storageReference.putFile(imageURI).addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {
                                        @Override
                                        public void onComplete(@NonNull Task<UploadTask.TaskSnapshot> task) {
                                            if (task.isSuccessful()){
                                                storageReference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
                                                    @Override
                                                    public void onSuccess(Uri uri) {
                                                        imageuri = uri.toString();
                                                        Users users = new Users(email,namee,Password,id,ReEnterPassword, status);
                                                        Task<Void> voidTask = reference.setValue(users).addOnCompleteListener(new OnCompleteListener<Void>() {
                                                            @Override
                                                            public void onComplete(@NonNull Task<Void> task) {

                                                                if (task.isSuccessful()){
                                                                    progressDialog.show();
                                                                    Intent intent = new Intent(registration.this,MainActivity.class);
                                                                    startActivity(intent);
                                                                    finish();
                                                                }else {
                                                                    Toast.makeText(registration.this, "Error in creating the user", Toast.LENGTH_SHORT).show();
                                                                }

                                                            }
                                                        });

                                                    }
                                                });
                                            }
                                        }
                                    });
                                }else{
                                    String status = "hey i am using this application";
                                    imageuri = "https://firebasestorage.googleapis.com/v0/b/chitchat2-0.appspot.com/o/man.png?alt=media&token=91f34d65-3af5-4582-8e17-44423a384e7a";
                                    Users user = new Users(namee,id,Password,imageuri,status, status);
                                    Task<Void> voidTask = reference.setValue(user).addOnCompleteListener(new OnCompleteListener<Void>() {
                                        @Override
                                        public void onComplete(@NonNull Task<Void> task) {

                                            if (task.isSuccessful()){
                                                progressDialog.show();
                                                Intent intent = new Intent(registration.this,MainActivity.class);
                                                startActivity(intent);
                                                finish();
                                            }else {
                                                Toast.makeText(registration.this, "Error in creating the user", Toast.LENGTH_SHORT).show();
                                            }

                                        }
                                    });



                                }
                            }else {
                                Toast.makeText(registration.this, task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                            }
                        }
                    });
                }
            }
        });







        rg_profileImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent();
                intent.setType("image/*");
                intent.setAction((Intent.ACTION_GET_CONTENT));
                startActivityForResult(Intent.createChooser(intent,"Select Picture"),10);
            }
        });



    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode==10){
            if (data!=null){
                imageURI = data.getData();
                rg_profileImg.setImageURI(imageURI);

            }
        }
        }
    }
